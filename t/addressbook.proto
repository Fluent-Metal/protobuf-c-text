// See README.txt for information and build instructions.

package tutorial;

option java_package = "com.example.tutorial";
option java_outer_classname = "AddressBookProtos";

message Person {
  required string name = 1;
  required int32 id = 2;        // Unique ID number for this person.
  optional string email = 3;
  optional double double_var = 10;
  optional float float_var = 11;
  optional int64 int64_var = 12;
  optional uint32 uint32_var = 13;
  optional uint64 uint64_var = 14;
  optional sint32 sint32_var = 15;
  optional sint64 sint64_var = 16;
  optional fixed32 fixed32_var = 17;
  optional fixed64 fixed64_var = 18;
  optional sfixed32 sfixed32_var = 19;
  optional sfixed64 sfixed64_var = 20;
  optional bool bool_var = 21;
  optional string string_var = 22;
  optional bytes bytes_var = 23;

  enum PhoneType {
    MOBILE = 0;
    HOME = 1;
    WORK = 2;
  }

  message PhoneNumber {
    required string number = 1;
    optional PhoneType type = 2 [default = HOME];
  }

  repeated PhoneNumber phone = 4;
}

// Our address book file is just one of these.
message AddressBook {
  repeated Person person = 1;
}

message Test {

  required string rq_str_var = 1;
  required double rq_double_var = 2;
  required float rq_float_var = 3;
  required int64 rq_int64_var = 4;
  required uint32 rq_uint32_var = 5;
  required uint64 rq_uint64_var = 6;
  required sint32 rq_sint32_var = 7;
  required sint64 rq_sint64_var = 8;
  required fixed32 rq_fixed32_var = 9;
  required fixed64 rq_fixed64_var = 10;
  required sfixed32 rq_sfixed32_var = 11;
  required sfixed64 rq_sfixed64_var = 12;
  required bool rq_bool_var = 13;
  required bytes rq_bytes_var = 14;

  repeated string rp_str_var = 21;
  repeated double rp_double_var = 22;
  repeated float rp_float_var = 23;
  repeated int64 rp_int64_var = 24;
  repeated uint32 rp_uint32_var = 25;
  repeated uint64 rp_uint64_var = 26;
  repeated sint32 rp_sint32_var = 27;
  repeated sint64 rp_sint64_var = 28;
  repeated fixed32 rp_fixed32_var = 29;
  repeated fixed64 rp_fixed64_var = 30;
  repeated sfixed32 rp_sfixed32_var = 31;
  repeated sfixed64 rp_sfixed64_var = 32;
  repeated bool rp_bool_var = 33;
  repeated bytes rp_bytes_var = 34;

  enum TestEnum {
    FOO = 0;
    BAR = 1;
    KITTEN = 2;
  }

  message TestMsg {
    required TestEnum rq_enum_var = 1;
    repeated TestEnum rp_enum_var = 2;
  }

  required TestMsg rq_msg = 40;
  optional TestMsg op_msg = 41;

}
